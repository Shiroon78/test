Here is a Python program that demonstrates how to create a Library class with two instance variables: no_of_books and books. The program creates an instance of the Library class, adds some books to it, and then prints all the books, the number of books, and adds a new book. The program also demonstrates that the books are not persisted after the program is stopped.
class Library:
    def __init__(self):
        self.no_of_books = 0
        self.books = []

    def add_book(self, book_name):
        self.books.append(book_name)
        self.no_of_books += 1

    def print_books(self):
        print("Total number of books:", self.no_of_books)
        print("Books:")
        for book in self.books:
            print(book)

    def __del__(self):
        print("Deleting the library object")

# Create a library object
library = Library()

# Add some books
library.add_book("Python Crash Course")
library.add_book("Fluent Python")

# Print all books and the number of books
library.print_books()
print()

# Add a new book
library.add_book("Effective Python")

# Print all books and the number of books again
library.print_books()

# Delete the library object
del library

Explanation:

The Library class has two instance variables: no_of_books to keep track of the total number of books in the library, and books to store the list of books.
The constructor initializes the instance variables to their default values.
The add_book method adds a book to the list of books and increments the no_of_books variable.
The print_books method prints the total number of books, the list of books, and their details.
The __del__ method is called when an object is about to be destroyed. In this case, it prints a message to indicate that the Library object is being deleted.
The program creates an instance of the Library class, adds some books to it, and then prints all the books, the number of books, and adds a new book.
The del keyword is used to delete the library object, which triggers the __del__ method and prints the message "Deleting the library object".
Since the books instance variable is a list, the changes made to it are reflected in the original list as well.