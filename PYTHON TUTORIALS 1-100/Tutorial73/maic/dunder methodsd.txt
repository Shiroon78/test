init(self): This method is called when an instance of the class is created. It is used to initialize the instance attributes.

str(self): This method is called when the object is converted to a string. It should return a string representation of the object.

repr(self): This method is called when the object is converted to a string using the repr() function. It should return a string representation of the object that can be evaluated to recreate the object.

add(self, other): This method is called when two objects of the same class are added together. It should return the result of the addition.

eq(self, other): This method is called when two objects of the same class are compared for equality. It should return True if the objects are equal, and False otherwise.

len(self): This method is called when the length of the object is needed. It should return the length of the object.

getitem(self, key): This method is called when the object is indexed with a key. It should return the value of the object indexed by the key.

setitem(self, key, value): This method is called when the object is indexed with a key and a value is assigned to it. It should set the value of the object indexed by the key.

delitem(self, key): This method is called when the object is indexed with a key and the value is deleted. It should delete the value of the object indexed by the key.

iter(self): This method is called when the object is iterated over. It should return an iterator that can be used to iterate over the object.

contains(self, item): This method is called when an item is checked to see if it is in the object. It should return True if the item is in the object, and False otherwise.

These are just a few examples of magic methods in Python. There are many more, and they can be used to customize the behavior of classes in powerful ways.