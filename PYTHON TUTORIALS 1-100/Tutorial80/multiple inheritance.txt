In Python, multiple inheritance is not supported natively, but it can be emulated using multiple inheritance patterns such as the composition or mixin patterns.

For example, consider the following classes:
class A:
    def method_a(self):
        print("A.method_a")

class B:
    def method_b(self):
        print("B.method_b")

class C(A, B):
    def method_c(self):
        print("C.method_c")

In this example, C inherits from both A and B, and it inherits the methods method_a and method_b from A and method_b from B.

This is an example of multiple inheritance in Python, where C inherits from two base classes. However, it is not true multiple inheritance, as C does not inherit directly from both A and B. Instead, it inherits from A first, and then from B.

In object-oriented programming, multiple inheritance is a way of allowing multiple classes to inherit properties and methods from multiple other classes. In JavaScript, it is not possible to have multiple inheritance, as it only supports single inheritance.